id: "zigbee_stack_unix"
label: "Zigbee Stack Unix"
package: "Zigbee"
category: "Zigbee"
quality: "production"
description: "This plugin contains defines, source files, and include paths to build Zigbee apps against Linux."

provides:
  - name: "zigbee_stack_unix"
  - name: "zigbee_simulation_or_zigbee_stack_unix"
  - name: "iostream"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_system"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_gpio"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_common"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_core"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_emu"
    condition:
     - "zigbee_stack_unix"
  - name: "emlib_cmu"
    condition:
     - "zigbee_stack_unix"
  - name: "legacy_hal"
    condition:
     - "zigbee_stack_unix"
  - name: "token_manager"
    condition:
     - "zigbee_stack_unix"
  - name: "rail_util_ant_div"
    condition:
     - "zigbee_stack_unix"
  - name: "rail_util_coex"
    condition:
     - "zigbee_stack_unix"    
  - name: "rail_util_pti"
    condition:
     - "zigbee_stack_unix"
  - name: "device_init_core"
    condition:
     - "zigbee_stack_unix"
  - name: "sleeptimer"
    condition:
     - "zigbee_stack_unix"
  - name: "device_host"
    condition:
     - "zigbee_stack_unix"
  - name: "device"
    condition:
     - "zigbee_stack_unix"
  - name: "device_restricted"
    condition:
     - "zigbee_stack_unix"
  - name: "mbedtls_entropy_source"
    condition:
     - "zigbee_stack_unix"
  - name: "zigbee_debug_basic"
    condition:
     - "zigbee_stack_unix"   

requires:
  - name: "sl_system_init"
  - name: "sl_system_process_action"
  - name: operating_system
  - name: zigbee_stack_unix_library
    condition:
     - "zigbee_force_libraries"
  - name: zigbee_stack_unix_implementation   

recommends:
  - id: linux
  - id: zigbee_stack_unix_source

library:
  - system: "util"
  - system: "stdc++"

include:
  - path: ./
    file_list:
      - path: platform/common/inc/sl_enum.h
      - path: platform/radio/rail_lib/plugin/coexistence/protocol/ieee802154_uc/coexistence-802154.h
      - path: platform/radio/rail_lib/plugin/coexistence/protocol/ieee802154/coexistence-802154.h
      - path: platform/service/iostream/inc/sl_iostream_swo_itm_8.h
      - path: platform/service/iostream/inc/sl_iostream.h
      - path: platform/service/legacy_hal/inc/button.h
      - path: platform/service/legacy_hal/inc/crc.h
      - path: platform/service/legacy_hal/inc/em2xx-reset-defs.h
      - path: platform/service/legacy_hal/inc/hal.h
      - path: platform/service/legacy_hal/inc/hal/hal.h
      - path: platform/service/legacy_hal/inc/led.h
      - path: platform/service/legacy_hal/inc/micro-common.h
      - path: platform/service/legacy_hal/inc/micro-types.h
      - path: platform/service/legacy_hal/inc/micro.h
      - path: platform/service/legacy_hal/inc/platform-header.h
      - path: platform/service/legacy_hal/inc/random.h
      - path: platform/service/legacy_hal/inc/serial.h
      - path: platform/service/legacy_hal/inc/serial.h
      - path: platform/service/legacy_hal/inc/serial/serial.h
      - path: platform/service/legacy_host/inc/token.h
      - path: protocol/zigbee/app/zigbeed/zigbeed_configuration.h
      - path: protocol/zigbee/stack/framework/zigbee_debug_channel.h
      - path: util/silicon_labs/silabs_core/event_control/event.h
      - path: util/third_party/libcoap/include/coap/coap.h
      - path: util/third_party/openthread/include/openthread/backbone_router.h 
      - path: util/third_party/openthread/include/openthread/border_router.h
      - path: util/third_party/openthread/include/openthread/channel_manager.h
      - path: util/third_party/openthread/include/openthread/channel_monitor.h
      - path: util/third_party/openthread/include/openthread/child_supervision.h
      - path: util/third_party/openthread/include/openthread/coap.h
      - path: util/third_party/openthread/include/openthread/commissioner.h
      - path: util/third_party/openthread/include/openthread/config.h
      - path: util/third_party/openthread/include/openthread/coprocessor_rpc.h
      - path: util/third_party/openthread/include/openthread/crypto.h
      - path: util/third_party/openthread/include/openthread/dataset_updater.h
      - path: util/third_party/openthread/include/openthread/joiner.h
      - path: util/third_party/openthread/include/openthread/platform/coprocessor_rpc.h
      - path: util/third_party/openthread/include/openthread/platform/crypto.h
      - path: util/third_party/openthread/include/openthread/srp_server.h
      - path: util/third_party/openthread/src/core/common/logging.hpp
      - path: util/third_party/openthread/src/core/config/announce_sender.h  
      - path: util/third_party/openthread/src/core/config/backbone_router.h
      - path: util/third_party/openthread/src/core/config/border_router.h 
      - path: util/third_party/openthread/src/core/config/channel_manager.h
      - path: util/third_party/openthread/src/core/config/channel_monitor.h
      - path: util/third_party/openthread/src/core/config/child_supervision.h
      - path: util/third_party/openthread/src/core/config/coap.h
      - path: util/third_party/openthread/src/core/config/commissioner.h
      - path: util/third_party/openthread/src/core/config/coprocessor_rpc.h
      - path: util/third_party/openthread/src/core/config/crypto.h
      - path: util/third_party/openthread/src/core/config/dataset_updater.h
      - path: util/third_party/openthread/src/core/config/dhcp6_client.h
      - path: util/third_party/openthread/src/core/config/dhcp6_server.h
      - path: util/third_party/openthread/src/core/config/diag.h
      - path: util/third_party/openthread/src/core/config/dns_client.h
      - path: util/third_party/openthread/src/core/config/dnssd_server.h
      - path: util/third_party/openthread/src/core/config/dtls.h
      - path: util/third_party/openthread/src/core/config/joiner.h
      - path: util/third_party/openthread/src/core/config/openthread-core-default-config.h
      - path: util/third_party/openthread/src/core/config/srp_client.h
      - path: util/third_party/openthread/src/core/config/srp_server.h
      - path: util/third_party/openthread/src/core/openthread-core-config.h
      - path: util/third_party/openthread/third_party/mbedtls/repo/include/psa/crypto.h
  - file_list:
      - path: em_device.h
      - path: simulation_event_sc12.h
      - path: simulation_gpio_p.h
      - path: simulation_gpio.h
      - path: simulation_sc.h
    path: platform/Device/SiliconLabs/simulation/Include/
  - path: "./"
  - path: "protocol/zigbee/stack"
  - path: "protocol/zigbee/stack/framework"
  - path: "platform/service/legacy_host/inc"
  - path: "platform/service/legacy_ncp_ash/inc"
  - path: "platform/service/token_manager/inc"
    file_list:
    - path: sl_token_manufacturing_unix.h
  - path: "platform/emlib/host/inc"
  - path: platform/service/legacy_hal/inc
    file_list:
    - path: rijndael-alg-fst.h
    - path: rijndael-api-fst.h
    - path: security_unix.h
    - path: platform-header.h
    - path: random.h

# used by zigbeed/simulator_stubs.c
  - path: "platform/radio/rail_lib/plugin/coexistence/protocol/ieee802154"

  - path: "platform/common/inc"

# used by iostream_printf?
  - path: "platform/service/iostream/inc"

# used by posix_ncp_app
  - path: "util/third_party/openthread/src/posix/platform"

# for openthread-config-generic.h
# this is a platform-specific file generated by the OT build system,
# and I just copied it over as a temporary workaround.  We should
# move it in with lower-mac-spinel at the minimum.
  - path: "protocol/zigbee/app/zigbeed"

source:

# Posix Stubs
  - path: "protocol/zigbee/app/zigbeed/simulator_stubs.c"
  - path: "protocol/zigbee/app/zigbeed/coexistence-802154-stubs.c"
  - path: "protocol/zigbee/app/zigbeed/micro-stubs.c"
# implements emberSerial* functions for a posix target, opening a tty
# possibly move file to something like:
# platform/service/legacy_serial/ember-serial-posix.c
  - path: "platform/service/token_manager/src/sl_token_def.c"
  - path: "protocol/zigbee/app/zigbeed/serial_adapter.c"    
  - path: "platform/service/legacy_host/src/token.c"
  - path: "platform/service/legacy_hal/src/rijndael-alg-fst.c"
  - path: "platform/service/legacy_hal/src/rijndael-api-fst.c"
  - path: "platform/service/legacy_hal/src/random.c"
  - path: "platform/service/legacy_hal/src/system-timer.c"
  - path: "platform/service/legacy_hal/src/crc.c"
  # not brought in by default, since this component provides zigbee_debug_basic
  - path: "protocol/zigbee/stack/framework/debug-stub.c"

define:
  - name: UNIX_HOST
  - name: ZIGBEE_STACK_ON_HOST

# used in lots of places. in most places UNIX_HOST would be a better name,
# but it would be a lot of work to refactor    
  - name: EMBER_TEST
  
# only used in platform/radio/mac/upper-mac.h and lower-mac.h to include phy.h
  - name: UNIX
  
# only used in micro-types.h
  - name: PHY_SIMULATION
  
# only used in app/framework/security/af-trust-center in reverse()
  - name: BOARD_SIMULATION

# only used in app-main.c to call emberSerialInit()
  - name: APP_SERIAL
    value: 1
  - name: APP_BAUD_RATE
    value: BAUD_115200

  - name: PLATFORM_HEADER
    value: "\"platform-header.h\""
  - name: __INLINE
    value: inline

# used in util/silicon_labs/silabs_core/event_control/event-control and 
# util/silicon_labs/silabs_core/event_control/event
  - name: EMBER_NO_IDLE_SUPPORT
    value: 1

# running on the host so no bootloader
  - name: EZSP_NO_BOOTLOADER
    value: 1
    
# mbedtls_config_autogen.h
  - name: TEST_SUITE_MEMORY_BUFFER_ALLOC

  - name: CONFIGURATION_HEADER
    value:  "\"../../../zigbeed/zigbeed_configuration.h\""

# For some reason ember-configuration.c allocates 800 bytes too little memory.
# Work around with this define that adds more available memory.  Add a lot more.
  - name: RESERVED_AVAILABLE_MEMORY
    value: 8000

# TODO: Need to turn off optimizations to make it work on Linux
toolchain_settings:
  - option: optimize
    value: "none"
  - option: gcc_compiler_option
    value: "-m32"
    condition:
     - "linux_arch_64"
  - option: gcc_compiler_option
    value: "-Wno-unused-parameter"
  - option: gcc_compiler_option
    value: "-Wno-missing-field-initializers"
  - option: gcc_compiler_option
    value: "-Wno-missing-braces"
  # On Mac, clang 12 forces 64 bit compilation to error on violations of
  # implicit-function-declaration. We are not there yet in fixing all violations
  # (there is a PIT effort to catalog warnings and fix them), so for now, we
  # turn it off. This has not been an issue until now because 32 bit compilation
  # does not turn error on implicit references
  - option: gcc_compiler_option
    value: "-Wno-error=implicit-function-declaration"


documentation:
  docset: zigbee
  document: zigbee-af-api/linux
