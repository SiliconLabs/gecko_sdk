project_name: simple_trx_std
label: "Flex (RAIL) - Simple TRX Standards"
package: Flex
description: "This application demonstrates the simplest exchange of transmit and receive operation between two nodes using IEEE Std. 802.15.4 and IEEE Std. 802.15.4g and BLE.
Both nodes can send and receive IEEE Std. 802.15.4 and IEEE Std. 802.15.4g or BLE advertising frames.
With IEEE Std. 802.15.4 the frame can be sent and received with CSMA/CA, auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast).
With IEEE Std. 802.15.4g the frame can be sent and received with auto-ACK, address filtering and setable Frame Control Frame (available settings broadcast or unicast).
On the WSTK, any button press (PB0/PB1) will send a message.
LED0 will toggle on message send and LED1 will toggle on message receive.
CLI can also be used for sending and showing received messages.
To send enter 'send'. By default the received packets will be printed out in terminal.
To change standard to BLE, the Flex - RAIL BLE support software component shall be installed under Flex/RAIL/Utilility.
With one click this baremetal sample app can be run on an OS, currently MicriumOS and FreeRTOS is supported.
NOTE: Due to the higher current consumption of the continuous radio usage (especially in Rx Mode), it is not recommended to power the boards from a coin cell. Instead, an USB power bank can be used if portability is needed."
category: RAIL Examples
quality: production

#---------------- UC/UP components -------------------
component:
  - id: sl_system
  - id: device_init
  - id: sl_simple_rail_stub
  - id: app_log
  - id: app_assert
  - id: sl_flex_rail_802154_support
  - id: simple_button
    instance:
      - btn0
      - btn1
  - id: simple_led
    instance:
      - led0
      - led1
#------------Memory Protection Unit-------------------
  - id: mpu

#---------------------- CLI --------------------------
  - id: cli
    instance:
    - example
  - id: printf
  - id: iostream_recommended_stream
  - id: iostream_retarget_stdio

#----------------- Require list ----------------------
requires:
  - name: sl_flex_rail_protocol
  - name: module_not_supported
    condition:
      - device_is_module
  - name: sl_simple_rail_os
    condition:
      - "kernel"

#---------------- RF band defines --------------------
define:
  # supported bands
  - name: RF_BAND_2P4
    value: "1"
    condition:
      - "hardware_board_supports_rf_band_2400"
  - name: RF_BAND_868
    value: "1"
    condition:
      - "hardware_board_supports_rf_band_868"
  - name: RF_BAND_915
    value: "1"
    condition:
      - "hardware_board_supports_rf_band_915"
  # these bands (914,920) are supported, but the 915 band can be set as radion config for 802154
  - name: RF_BAND_914
    value: "1"
    condition:
      - "hardware_board_supports_rf_band_914"
  - name: RF_BAND_924
    value: "1"
    condition:
      - "hardware_board_supports_rf_band_924"

#----------------- Project files ---------------------
include:
  - path: .
    file_list:
    - path: app_init.h
    - path: app_process.h

source:
  - path: main.c
  - path: app_init.c
  - path: app_process.c
  - path: app_cli.c
    condition:
      - cli

readme:
  - path: ../../../documentation/example/rail/simple_trx_std/readme.md

other_file:
  - path: "hw_filter_tags.yaml"

#------------ Configuration overrides ----------------
configuration:
  - name: SL_STACK_SIZE
    value: "2048"
  - name: SL_HEAP_SIZE
    value: "2048"
#------------- FreeRTOS OS        --------------------
  - name: configMINIMAL_STACK_SIZE
    value: "1024"
#------------- Micrium OS / SystemView --------------------
  - name: CPU_CFG_TS_32_EN
    value: "1"
  - name: OS_CFG_DBG_EN
    value: "1"
  - name: OS_CFG_TS_EN
    value: "1"
  - name: OS_CFG_SCHED_ROUND_ROBIN_EN
    value: "1"
  - name: OS_CFG_STAT_TASK_EN
    value: "1"
  - name: OS_CFG_TASK_PROFILE_EN
    value: "1"
#-------------------- RAIL init ----------------------
  - name: SL_RAIL_UTIL_BLE_SUPPORT_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_INIT_PROTOCOLS_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_CALIBRATIONS_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_TRANSITIONS_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENTS_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_SCHEDULER_SUPPORT_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_INIT_COMPLETE_CALLBACK_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_DATA_FORMATS_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_SUCCESS
    value: "RAIL_RF_STATE_RX"
  - name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_TX_ERROR
    value: "RAIL_RF_STATE_RX"
  - name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_SUCCESS
    value: "RAIL_RF_STATE_RX"
  - name: SL_RAIL_UTIL_INIT_TRANSITION_INST0_RX_ERROR
    value: "RAIL_RF_STATE_RX"

    # default IEEE 802.15.4 (2.4GHz) protocol settings
    # if the 2P4GHz rf band is available next to other sub-GHz rf bands, it is the default rf band
    # if the 2P4GHz is not available on the board, the default sub-GHz rf band is the default rf band
  - name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT
    value: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ
    condition:
        - "hardware_board_supports_rf_band_2400"
  - name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT
    value: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_863MHZ
    condition:
        - "hardware_board_default_rf_band_868"
    unless:
        - "hardware_board_supports_rf_band_2400"
  - name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT
    value: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_915MHZ
    condition:
        - "hardware_board_default_rf_band_915"
    unless:
        - "hardware_board_supports_rf_band_2400"
    # default rf band in case of the custom board 
    # 2P4GHz is always the default rf band, the user shall pay attention on it
  - name: SL_RAIL_UTIL_INIT_PROTOCOL_INST0_DEFAULT
    value: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ
    unless:
        - "hardware_board_default_rf_band"


#------------- RAIL init, Radio Events ---------------
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_PACKET_RECEIVED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_PACKET_SENT_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_CAL_NEEDED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TXACK_PACKET_SENT_INST0_ENABLE
    value: "1"
    # RX error events
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_PACKET_ABORTED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_FRAME_ERROR_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_FIFO_OVERFLOW_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_ADDRESS_FILTERED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_RX_SCHEDULED_RX_MISSED_INST0_ENABLE
    value: "1"
    # TX error events
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_ABORTED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_BLOCKED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_UNDERFLOW_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_CHANNEL_BUSY_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TX_SCHEDULED_TX_MISSED_INST0_ENABLE
    value: "1"
    # TX ACK error events
  - name: SL_RAIL_UTIL_INIT_EVENT_TXACK_ABORTED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TXACK_BLOCKED_INST0_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_INIT_EVENT_TXACK_UNDERFLOW_INST0_ENABLE
    value: "1"
#-------- RAIL protocol IEEE 802154 settings (2.4GHz) ---------
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_PAN_COORDINATOR_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_PROMISCUOUS_MODE_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_DEFAULT_FRAME_PENDING_STATE
    value: "0"
    # Frame types
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_ACCEPT_BEACON_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_ACCEPT_DATA_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_ACCEPT_ACK_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_ACCEPT_COMMAND_FRAME_ENABLE
    value: "1"
    # Transition Times
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_IDLE_TO_RX_US
    value: "100"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_TX_TO_RX_US
    value: "182"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_IDLE_TO_TX_US
    value: "100"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_RX_TO_TX_US
    value: "192"
    # RX search timeouts
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_RX_SEARCH_TIMEOUT_AFTER_IDLE_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_TIMING_RX_SEARCH_TIMEOUT_AFTER_TX_ENABLE
    value: "0"
    # ACK settings
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_AUTO_ACK_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_AUTO_ACK_TIMEOUT_US
    value: "1000"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_AUTO_ACK_RX_TRANSITION_STATE
    value: "RAIL_RF_STATE_RX"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_2P4GHZ_AUTO_ACK_TX_TRANSITION_STATE
    value: "RAIL_RF_STATE_RX"
#-------- RAIL protocol IEEE 802154 settings (863/915MHz) ---------
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_PAN_COORDINATOR_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_PROMISCUOUS_MODE_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_DEFAULT_FRAME_PENDING_STATE
    value: "0"
    # Frame types
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_ACCEPT_BEACON_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_ACCEPT_DATA_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_ACCEPT_ACK_FRAME_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_ACCEPT_COMMAND_FRAME_ENABLE
    value: "1"
    # Transition Times
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_IDLE_TO_RX_US
    value: "100"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_TX_TO_RX_US
    value: "182"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_IDLE_TO_TX_US
    value: "100"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_RX_TO_TX_US
    value: "192"
    # RX search timeouts
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_RX_SEARCH_TIMEOUT_AFTER_IDLE_ENABLE
    value: "0"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_TIMING_RX_SEARCH_TIMEOUT_AFTER_TX_ENABLE
    value: "0"
    # ACK settings
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_AUTO_ACK_ENABLE
    value: "1"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_AUTO_ACK_TIMEOUT_US
    value: "1200"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_AUTO_ACK_RX_TRANSITION_STATE
    value: "RAIL_RF_STATE_RX"
  - name: SL_RAIL_UTIL_PROTOCOL_IEEE802154_GB868_AUTO_ACK_TX_TRANSITION_STATE
    value: "RAIL_RF_STATE_RX"

#------------- Other project settings ----------------
  - name: SL_BOARD_ENABLE_VCOM
    value: "1"
  - name: SL_CLI_LOCAL_ECHO
    value: "(1)"
  - name: SL_IOSTREAM_USART_VCOM_CONVERT_BY_DEFAULT_LF_TO_CRLF
    value: "(1)"
  - name: SL_IOSTREAM_USART_VCOM_FLOW_CONTROL_TYPE
    value: "usartHwFlowControlNone"
  - name: SL_IOSTREAM_EUSART_VCOM_CONVERT_BY_DEFAULT_LF_TO_CRLF
    value: "(1)"
  - name: SL_IOSTREAM_EUSART_VCOM_FLOW_CONTROL_TYPE
    value: "eusartHwFlowControlNone"
  - name: APP_LOG_PREFIX_ENABLE
    value: "0"

#-------------- Template Contribution ----------------
template_contribution:
#------------------ CLI commands ---------------------
# -- info --
  - name: cli_command
    value:
      name: info
      handler: cli_info
      help: Unique ID of the MCU
# -- send --
  - name: cli_command
    value:
      name: send
      handler: cli_send_packet
      help: Send a packet
# -- receive --
  - name: cli_command
    value:
      name: receive
      handler: cli_receive_packet
      help: Turn ON/OFF received message forwarding on CLI
      argument:
      - type: uint8
        help: ON/OFF
# for IEEE 802.15.4/g
# -- std --
  - name: cli_command
    value:
      name: std
      handler: cli_std
      help: Sets the Standard (IEEE 802.15.4 or IEEE 802.15.4g)
      argument:
      - type: string
        help: b is (basic) IEEE 802.15.4, g is IEEE 802.15.4g
      - type: stringopt
        help: IEEE 802.15.4g (863 is 863MHz, 915 is 915MHz)
# -- panid --
  - name: cli_command
    value:
      name: panid
      handler: cli_pan_id
      help: Sets the PAN ID
      argument:
      - type: uint16
        help: PAN ID in hex form
# -- srcaddr --
  - name: cli_command
    value:
      name: srcaddr
      handler: cli_src_addr
      help: Sets the short address of source
      argument:
      - type: uint16
        help: Short address in hex form
# -- destaddr --
  - name: cli_command
    value:
      name: destaddr
      handler: cli_dest_addr
      help: Sets the short address of destination
      argument:
      - type: uint16
        help: Short address in hex form
# -- ack --
  - name: cli_command
    value:
      name: ackreq
      handler: cli_ack_req
      help: ACK is requested or not
      argument:
      - type: uint8
        help: 0 is NOT requested, 1 is requested
# -- configdw --
  - name: cli_command
    value:
      name: configdw
      handler: cli_cfg_dw
      help: Configures the IEEE Std. 802.15.4g whitening
      argument:
      - type: uint8
        help: 0 -> Data whitening OFF, 1 -> Data whitening ON
# -- configcrc --
  - name: cli_command
    value:
      name: configcrc
      handler: cli_cfg_crc
      help: Configures the IEEE Std. 802.15.4g CRC
      argument:
      - type: uint8
        help: 2 -> CRC 2 bytes, 4 -> CRC 4 bytes

#--------------------- Toolchain ------------------------
toolchain_settings:
  - option: optimize
    value: debug

ui_hints:
  highlight:
    - path: "readme.md"
      focus: true

