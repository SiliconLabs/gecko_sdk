project_name: switch
label: "Flex (Connect) - SoC Switch Example"
package: Flex
description: "The purpose of the application is to demonstrate a simple wireless communication between two or more boards, using the connect SDK.
In combination with the Connect Light DMP sample application it creates a basic switch functionality, where the LEDs can be toggled in the Light node.
After power up, the Light (network coordinator) create its own local network, and the Switch modules (low power end-nodes) can join to this network, and control the Light node. 
If a local network is established with the - form - CLI command, the Switch nodes can join with the - join - CLI command.
After that point, the Light can be controlled with pushing the PB1 button on any connected Switch node."
category: Connect Examples
quality: production

#---------------- UC/UP components -------------------
component:
  - id: sl_system
  - id: device_init
  - id: radio_config_simple_connect_singlephy
  - id: app_log
  - id: app_assert
  - id: legacy_hal
  - id: token_manager
  # Connect components
  - id: connect_debug_print
  - id: connect_app_framework_common
  - id: connect_stack_common
  - id: connect_aes_security
  - id: connect_mac_queue
  - id: connect_stack_counters
  - id: connect_poll
  - id: connect_parent_support
  - id: connect_frequency_hopping
  - id: sl_light_switch_core
  - id: simple_button
    instance:
      - btn0
      - btn1
#---------------------- CLI --------------------------
  - id: cli
    instance:
    - example
  - id: printf
  - id: iostream_recommended_stream
  - id: iostream_retarget_stdio
#------------Memory Protection Unit-------------------
  - id: mpu
#-------------- Restriction rules -------------------
  - id: restrictions_profile_connect
  - id: restrictions_profile_long_range

#----------------- Require list ----------------------
requires:
  - name: a_radio_config
    condition:
      - device_is_module
#----------------- Project files ---------------------
include:
  - path: "."
    file_list:
      - path: "app_init.h"
      - path: "app_process.h"
source:
  - path: "main.c"
  - path: "app_init.c"
  - path: "app_process.c"
  - path: "app_cli.c"
    condition:
    - "cli"

other_file:
  - path: "../../../../script/connect_create_gbl_image.bat"
  - path: "../../../../script/connect_create_gbl_image.sh"
  - path: "hw_filter_tags.yaml"

#----------------- Project macros --------------------

#------------ Configuration overrides ----------------
configuration:
#------------ RAIL init, Channel Config --------------
  - name: SL_BOARD_ENABLE_VCOM
    value: "1"
  - name: SL_CLI_LOCAL_ECHO
    value: "(1)"
  - name: SL_IOSTREAM_USART_VCOM_RESTRICT_ENERGY_MODE_TO_ALLOW_RECEPTION
    value: "false"
  - name: SL_IOSTREAM_USART_VCOM_CONVERT_BY_DEFAULT_LF_TO_CRLF
    value: "(1)"
  - name: SL_IOSTREAM_USART_VCOM_FLOW_CONTROL_TYPE
    value: "usartHwFlowControlNone"
  - name: SL_IOSTREAM_EUSART_VCOM_RESTRICT_ENERGY_MODE_TO_ALLOW_RECEPTION
    value: "false"
  - name: SL_IOSTREAM_EUSART_VCOM_CONVERT_BY_DEFAULT_LF_TO_CRLF
    value: "(1)"
  - name: SL_IOSTREAM_EUSART_VCOM_FLOW_CONTROL_TYPE
    value: "eusartHwFlowControlNone"
  - name: APP_LOG_PREFIX_ENABLE
    value: "0"
  - name: "SL_HEAP_SIZE"
    value: "8192"

#-------------- Template Contribution ----------------
template_contribution:
#------------------ CLI commands ---------------------
  - name: cli_command
    value:
      name: join
      handler: cli_join
      help: "Join the Switch to the network as a Sleepy End Device"
  - name: cli_command
    value:
      name: toggle_light
      handler: cli_toggle_light
      help: "Toggle the light on the Light node"
  - name: cli_command
    value:
      name: leave
      handler: cli_leave
      help: "Disconnect from the actual network"
  - name: cli_command
    value:
      name: reset
      handler: cli_reset
      help: "Reset the hardware"
  - name: cli_command
    value:
      name: info
      handler: cli_info
      help: "MCU ID, Network state, Node ID, PAN ID, Channel ID, etc."
  - name: cli_command
    value: 
      name: set_pan_id
      handler: cli_set_pan_id
      help: "Set the PAN ID of the node"
      argument:
      - type: uint16
        help: "2 byte PAN ID"
  - name: cli_command
    value: 
      name: set_channel
      handler: cli_set_channel
      help: "Set the communication channel"
      argument:
      - type: uint16
        help: "2 byte channel number"
#--------------------- Toolchain ------------------------
toolchain_settings:
  - option: optimize
    value: debug

