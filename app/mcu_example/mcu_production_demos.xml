<?xml version="1.0" encoding="UTF-8"?>
<demos xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:model="http://www.silabs.com/ss/Studio.ecore" xsi:noNamespaceSchemaLocation="http://www.silabs.com/ss/Demo.ecore">
  <demo name="brd2102a.demo.factory_demo" label="MCU Example - Factory Demo (Previously known as 'helges_demo')">
    <model:property key="demos.blurb" value="MCU Example - Factory Demo (Previously known as 'helges_demo')"/>
    <model:property key="core.partCompatibility" value=".*efm32tg11b520f128gm80.*"/>
    <model:property key="core.boardCompatibility" value="brd2102a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/factory_demo/factory_demo-brd2102a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>This example project demonstrates a wide range of features of the EFM32TG11 MCU and the SLSTK3301A Starter Kit.</model:description>
  </demo>
  <demo name="brd2204a.demo.factory_demo" label="MCU Example - Factory Demo (Previously known as 'helges_demo')">
    <model:property key="demos.blurb" value="MCU Example - Factory Demo (Previously known as 'helges_demo')"/>
    <model:property key="core.partCompatibility" value=".*efm32gg11b820f2048gl192.*"/>
    <model:property key="core.boardCompatibility" value="brd2204a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/factory_demo/factory_demo-brd2204a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>This example project demonstrates a wide range of features of the EFM32GG11 MCU and the SLSTK3701A Starter Kit.
</model:description>
  </demo>
  <demo name="brd2204a.demo.micriumos_canopen" label="MCU Example - Micrium OS CANopen">
    <model:property key="demos.blurb" value="MCU Example - Micrium OS CANopen"/>
    <model:property key="core.partCompatibility" value=".*efm32gg11b820f2048gl192.*"/>
    <model:property key="core.boardCompatibility" value="brd2204a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/micriumos_canopen/micriumos_canopen-brd2204a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>This example shows how to use the Micrium OS CANopen stack. It uses the EFM32GG11B starter kit's two CAN peripherals in external loopback mode.  It requires CAN expansion board ISO-CAN-EXP REV 1.0 or REV 2.0. This example  will, upon the user pressing either push buttons (BTN0, BTN1), update one entry  in the CANopen object dictionary of node 1 on the 'can0' bus with a predefined  value for each button. Upon changing the value, a PDO message will be triggered, which will be caught by node 2 on the 'can1' bus. Node 2 will in turn update its object dictionary with the received value. The value of the object of both nodes is continuously displayed on the LCD.
</model:description>
  </demo>
  <demo name="brd2204a.demo.micriumos_net" label="MCU Example - Micrium OS Network">
    <model:property key="demos.blurb" value="MCU Example - Micrium OS Network"/>
    <model:property key="core.partCompatibility" value=".*efm32gg11b820f2048gl192.*"/>
    <model:property key="core.boardCompatibility" value="brd2204a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/micriumos_net/micriumos_net-brd2204a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>MicriumOS Network example.
This example shows how to use the Micrium OS network stack with the ETH  peripheral on the EFM32GG11B starter kit. This example will initialize  the RMII interface to the external PHY and setup a 100 Mbit connection.
The example will output messages on the VCOM port and it will show status  on the memory lcd display on the kit. The display will show the current  link status along with the current IPv4 address and the currently  configured IPv6 addresses.
Micrium OS Support SEGGER SystemView to view the runtime behavior or a system. SystemView Trace is enabled by default when the segger_systemview component is included in the project. SystemView can be used to inspect the runtime behaviour of this example, it will give a nice overview of the tasks and interrupts in the application. SystemView can be downloaded  from https://www.segger.com/systemview.html
</model:description>
  </demo>
  <demo name="brd2204a.demo.micriumos_webmic" label="MCU Example - Micrium OS Webmic">
    <model:property key="demos.blurb" value="MCU Example - Micrium OS Webmic"/>
    <model:property key="core.partCompatibility" value=".*efm32gg11b820f2048gl192.*"/>
    <model:property key="core.boardCompatibility" value="brd2204a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/micriumos_webmic/micriumos_webmic-brd2204a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Example usage of microphones and MicriumOS HTTP server
This example shows how to sample data from the microphone and also how to stream that data on a web server using uC/HTTPs.
The audio is sampled from on-kit microphones by using LDMA. The sampled audio waveform is displayed on LCD.  Sampling and encoding is performed in the main os task. Configuration can be found in common_declarations.h and config.h. For info on encoding, see IETFs and xiphs rfc6716, rfc7845 and rfc3533.
The encoded data is then streamed through a simple no-file-system HTTP server. Transmission of data packets is handled by an HTTP server task by means of unicast and chunked transfer encoding.
To listen to the audio: connect the board via ethernet, wait for the IP to be shown on the display and type that IP into any browser capable of streaming opus. Because of real-time constraints, there's an upper limit of 5 clients.
Micrium OS Support SEGGER SystemView to view the runtime behavior or a system. SystemView Trace is enabled by default when the segger_systemview component is included in the project. SystemView can be usedto inspect the runtime  behaviour of this example, it will give a nice overview of the tasks and interrupts in the application. SystemView can be downloaded  from https://www.segger.com/systemview.html
</model:description>
  </demo>
  <demo name="brd2012a.demo.si72xx_wheeldemo" label="MCU Example - Si72xx Wheeldemo">
    <model:property key="demos.blurb" value="MCU Example - Si72xx Wheeldemo"/>
    <model:property key="core.partCompatibility" value=".*efm32hg322f64.*"/>
    <model:property key="core.boardCompatibility" value="brd2012a"/>
    <model:property key="demos.imageFile" value="asset://com.silabs.sdk.stack.super_4.0.2/app/mcu_example/demos/si72xx_wheeldemo/si72xx_wheeldemo-brd2012a.s37"/>
    <model:property key="core.quality" value="PRODUCTION"/>
    <model:description>Hall effect demo code for the Si72xx-WD-Kit using a Silicon Labs SLSTK3400A-EFM32HG Starter Kit.
You must have the Hall Effect Evaluation kit, Si72xx-WD-Kit, to make use of this demo. The Si72xx-WD-Kit includes two Si7210 sensors mounted on an expansion board (Si72xx-EXP) plus each of the six base part types mounted on small postage-stamp-sized (PS) boards. You must use the Silicon Labs SLSTK3400A-EFM32HG Starter Kit which is included in the Si72xx-WD-Kit.</model:description>
  </demo>
</demos>
